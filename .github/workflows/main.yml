name: Build Raspberry Pi Image

on:
  workflow_dispatch:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PiGen
      uses: actions/checkout@v4
      with:
        repository: 'RPi-Distro/pi-gen'

    - name: Checkout solar protocol
      uses: actions/checkout@v4
      with:
        path: 'solar-protocol'

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y qemu-user-static
        sudo apt install -y < depends

    - name: Create Config File
      id: config
      # we do not use compression here, since github upload will compress the image later when uploading
      run: |
        NOW=$(date +"%Y-%m-%d-%H%M")
        IMAGE=solar-protocol-${GITHUB_REF##*/}-$NOW
        echo building $IMAGE >> $GITHUB_STEP_SUMMARY
        AUTHORIZED_KEYS_FILE=solar-protocol/utilities/authorized_keys
        AUTHORIZED_KEYS="$(<$AUTHORIZED_KEYS_FILE)"
        AUTHORIZED_USERS=$(echo "$AUTHORIZED_KEYS" | cut -d' ' -f3 | cut -d'@' -f1 | sort -u | tr '\n' ' ')
        echo installing keys for $AUTHORIZED_USERS >> $GITHUB_STEP_SUMMARY
        cat > config <<EOF
        PI_GEN_RELEASE="solar-protocol"
        TARGET_HOSTNAME="solar-protocol"
        KEYBOARD_KEYMAP="us"
        KEYBOARD_LAYOUT="English (US)"
        TIMEZONE_DEFAULT="America/New_York"
        FIRST_USER_NAME="solar"
        WPA_COUNTRY="US"
        ENABLE_SSH="1"
        DEPLOY_COMPRESSION="none"
        PUBKEY_ONLY_SSH="1"
        PUBKEY_SSH_FIRST_USER="$AUTHORIZED_KEYS"
        STAGE_LIST="stage0 stage1 stage2 stageSolar"
        IMG_NAME="$IMAGE"
        EOF
        echo "image=$IMAGE"  >> $GITHUB_OUTPUT

    - name: Setup solar protocol stage
      run: |
        STAGE=stageSolar
        mkdir -p $STAGE
        pushd $STAGE
        cat > prerun.sh <<EOF
        #!/bin/bash -e
        if [ ! -d "${ROOTFS_DIR}" ]; then
          copy_previous
        fi
        EOF
        chmod +x prerun.sh
        popd

        STEP=00-install-dependencies
        mkdir -p $STAGE/$STEP
        pushd $STAGE/$STEP
        cat > 00-packages <<EOF
        apache2
        php
        python3-pip
        EOF
        popd

        STEP=stageSolar/01-install-python
        mkdir -p $STAGE/$STEP
        pushd $STAGE/$STEP
        cat > 00-run-chroot.sh <<EOF
        cd solar-protocol
        pip3 install -r requirements.txt
        EOF
        chmod +x 00-run-chroot.sh
        popd
    
    - name: Build Image
      run: |
        ./build-docker.sh

    - name: Get Image Name
      id: imagefile
      run: |
        cd deploy
        ls
        IMAGE_FILE=$(ls *.img)
        echo "imagefile=$IMAGE_FILE" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      name: upload build logs
      with:
        name: ${{ steps.config.outputs.image }}-build-logs
        path: deploy/*.{log,info}

    - uses: softprops/action-gh-release@v2
      with:
        name: ${{ steps.config.outputs.image }}
        files: deploy/${{ steps.imagefile.outputs.imagefile }}
        generate_release_notes: true
