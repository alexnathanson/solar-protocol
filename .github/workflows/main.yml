name: Build Raspberry Pi Image

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout pi-gen
      uses: actions/checkout@v4
      with:
        repository: 'RPi-Distro/pi-gen'

    - name: checkout solar protocol
      uses: actions/checkout@v4
      with:
        path: 'solar-protocol'

    - name: install build dependencies
      run: |
        sudo apt update
        sudo apt install -y qemu-user-static
        sudo apt install -y < depends

    - name: generate pi-gen config
      id: config
      run: |
        GITHUB_SHA_SHORT=$(git rev-parse --short ${GITHUB_SHA})
        echo "github_sha_short=$GITHUB_SHA_SHORT" >> $GITHUB_OUTPUT
        IMG_DATE=$(date +%Y-%m-%d)
        IMG_NAME=solar-protocol-${GITHUB_SHA_SHORT}
        ARCHIVE_FILENAME=${IMG_DATE}-${IMAGE_NAME}
        echo "archive_filename=$ARCHIVE_FILENAME" >> $GITHUB_OUTPUT
        AUTHORIZED_KEYS_FILE=solar-protocol/utilities/authorized_keys
        AUTHORIZED_KEYS="$(<$AUTHORIZED_KEYS_FILE)"
        AUTHORIZED_USERS=$(echo "$AUTHORIZED_KEYS" | cut -d' ' -f3 | cut -d'@' -f1 | sort -u | tr '\n' ' ')
        echo installing keys for $AUTHORIZED_USERS >> $GITHUB_STEP_SUMMARY
        cat > config <<EOF
        PI_GEN_RELEASE="solar-protocol"
        TARGET_HOSTNAME="solar-protocol"
        KEYBOARD_KEYMAP="us"
        KEYBOARD_LAYOUT="English (US)"
        TIMEZONE_DEFAULT="America/New_York"
        FIRST_USER_NAME="solar"
        WPA_COUNTRY="US"
        ENABLE_SSH="1"
        DEPLOY_COMPRESSION="xz"
        PUBKEY_ONLY_SSH="1"
        PUBKEY_SSH_FIRST_USER="$AUTHORIZED_KEYS"
        STAGE_LIST="stage0 stage1 stage2 stageSolar"
        IMG_DATE="$IMG_DATE"
        IMG_NAME="$IMG_NAME"
        ARCHIVE_FILENAME="$ARCHIVE_FILENAME"
        EOF

    - name: add solar protocol pi-gen stage
      run: |
        STAGE=stageSolar
        mkdir -p $STAGE
        pushd $STAGE
        cat > prerun.sh <<EOF
        #!/bin/bash -e
        if [ ! -d "${ROOTFS_DIR}" ]; then
          copy_previous
        fi
        export IMG_SUFFIX=""
        EOF
        chmod +x prerun.sh
        popd

        STEP=00-install-dependencies
        mkdir -p $STAGE/$STEP
        pushd $STAGE/$STEP
        cat > 00-packages <<EOF
        apache2
        php
        python3-pip
        EOF
        popd

        STEP=stageSolar/01-install-python
        mkdir -p $STAGE/$STEP
        pushd $STAGE/$STEP
        cat > 00-run-chroot.sh <<EOF
        cd solar-protocol
        pip3 install -r requirements.txt
        EOF
        chmod +x 00-run-chroot.sh
        popd
    
    - name: build image
      run: ./build-docker.sh

    - name: upload image
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.config.outputs.archive_filename }}
        path: |
          deploy/${{ steps.config.outputs.archive_filename }}.img.xz
          deploy/build.log
        compression-level: 0

    - name: create release
      uses: softprops/action-gh-release@v2
      with:
          tag_name: v0.1.1-${{ steps.config.outputs.github_sha_short }}
          files: |
            ${{ steps.config.outputs.archive_filename }}.img.xz
            deploy/build.log
          generate_release_notes: true
