# python -m venv venv
# . venv/bin/activate
# python -m pip install pymodbus[serial] minimalmodbus epevermodbus
# python battery

### minimalmodbus

import minimalmodbus

def main_minimalmodbus():
    instrument = minimalmodbus.Instrument('/dev/ttyUSB0', 1)
    instrument.serial.timeout = 1
    instrument.serial.baudrate = 115200

    solar_voltage = instrument.read_register(0x3100, 2, 4)
    print(solar_voltage, "V solar panel [minimalmodbus]")
    instrument.serial.close()

main_minimalmodbus()

### pymodbus[serial]

from pymodbus.client import AsyncModbusSerialClient
from time import sleep
import asyncio

async def main_pymodbus():
    client = AsyncModbusSerialClient(method = 'rtu', port = '/dev/ttyUSB0', baudrate = 115200)
    await client.connect()
    solar = await client.read_input_registers(0x3100, 2, 1)
    solar_voltage = solar.registers[0] / 100.00
    print(solar_voltage, "V solar panel [pymodbus]")
    client.close()

asyncio.run(main_pymodbus())

### epevermodbus

from epevermodbus.driver import EpeverChargeController

def main_epevermodbus():
    controller = EpeverChargeController('/dev/ttyUSB0', 1)
    solar_voltage = controller.get_solar_voltage()
    print(solar_voltage, "V solar panel [epevermodbus]")

main_epevermodbus()
