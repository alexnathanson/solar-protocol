{"version":3,"file":"component---src-pages-events-js-7cd1f92d2e10668bfb54.js","mappings":"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","sources":["webpack://panke-gallery-website/./src/components/event-date-time.js","webpack://panke-gallery-website/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://panke-gallery-website/./src/components/tag.js","webpack://panke-gallery-website/./src/components/event-list-item.js","webpack://panke-gallery-website/./src/pages/events.js"],"sourcesContent":["import React from 'react';\nimport Moment from 'moment';\n\nclass EventDateComp extends React.Component {\n  render() {\n    var thisevent = this.props.event;\n    var eventDate = Moment(thisevent.date).format('DD MMMM YYYY');\n    var eventTime = Moment(thisevent.date).format('HH:mm')\n\n    var eventEnd;\n    if (thisevent.openEnd) {\n      eventEnd = 'open end';\n    }else{\n      eventEnd = Moment(thisevent.endTime).format('HH:mm');\n    }\n    return(\n      <span>\n        {eventDate} from {eventTime} &thinsp;&ndash;&thinsp;{eventEnd}\n      </span>\n    );\n  }\n}\n\nexport default EventDateComp;\n\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react';\n\nclass Tag extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: false};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleTagClick = this.handleTagClick.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.isToggleOn !== this.props.filterIsOn){\n      this.setState(state => ({\n        isToggleOn: this.props.filterIsOn\n      }));\n    }\n  }\n\n  handleTagClick = () =>  {\n    this.props.handleClick(this.props.tag.slug);\n\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n\n//    this.refs.tag.classList.toggle('tag-selected');\n  }\n\n  render() {\n    const thistag = this.props.tag;\n    const type = this.props.type;\n    const toogle = this.state.isToggleOn\n\n    if (type === 'eventSeries' && toogle) {\n      var className = 'tag eventSeries tag-selected';\n    }\n    else if (type === 'eventSeries' && !toogle) {\n      className = 'tag eventSeries';\n    }\n    else{\n      className = 'tag';\n    }\n\n    if (this.props.noClick) {\n      return (\n        <button\n          ref=\"tag\"\n          className={className}\n          aria-label={`Tagged with ${thistag.name}`}\n          tabindex=\"-100\"\n        >\n          {thistag.name}\n        </button>\n      );\n    }\n    else{\n      return (\n        <button\n          ref=\"tag\"\n          className={className}\n          onClick={this.handleTagClick}\n          onKeyDown={this.handleTagClick}\n          aria-label={`Tagged with ${thistag.name}`}\n          tabindex=\"-100\"\n        >\n          {thistag.name}\n        </button>\n      );\n    }\n\n\n  }\n}\n\nexport default Tag;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport EventDate from '../components/event-date-time'\nimport Tag from '../components/tag'\n\n\nclass EventListItem extends React.Component {\n\n  render() {\n    var event = this.props.event;\n\n    var eventCategory;\n\n    if (event.eventSeries!=null) {\n      eventCategory =(\n        <Tag\n          ref={this.tagElement}\n          tag={event.eventSeries}\n          type=\"eventSeries\"\n          handleClick={this.props.handleClick}\n          filterIsOn={this.props.filterIsOn}\n        />\n      );\n    }\n\n    return(\n      <article className=\"news-item\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-4 col-xs-12\">\n              {eventCategory}\n          </div>\n          <div className=\"col-md-8 col-sm-8 col-xs-12\">\n            <h3>\n              <Link to={`/event/${event.slug}`}>{event.title}</Link>\n            </h3>\n            <div dangerouslySetInnerHTML={{\n                __html: event.subtitleShortDescription.childMarkdownRemark.html\n              }} />\n            <p className=\"meta\"><EventDate event={event} /></p>\n          </div>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default EventListItem;\n\n","import React from 'react';\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport EventListItem from '../components/event-list-item'\n\nclass PankeEvents extends React.Component {\n\n  state = {\n    isFilterOn: false,\n    filterby: ''\n  }\n\n  handleEventsClick = (tagSlug) => {\n    this.setState(state => ({\n      isFilterOn: !state.isFilterOn,\n      filterby: {tagSlug}\n    }));\n  }\n\n  passFilter = (ev) => {\n    if (!this.state.isFilterOn) {\n      return true;\n    }\n\n    if (!ev.eventSeries){\n      return false;\n    }\n\n    return this.state.filterby.tagSlug === ev.eventSeries.slug\n  }\n\n  returnEventListItem = (ev) => {\n//    console.log('h√§?')\n    return (\n      <EventListItem\n        key={ev.slug}\n        event={ev}\n        handleClick={this.handleEventsClick}\n        filterIsOn={this.state.isFilterOn}\n      />\n    )\n  }\n\n  componentDidMount = () => {\n    this.props.series && this.setState({\n      isFilterOn: true,\n      filterby: {tagSlug: this.props.series}\n    })\n  }\n\n  render() {\n\n    // Get array of events\n    const posts = get(this, 'props.data.allContentfulEvent.edges')\n\n    // Log array of Events\n//    console.log(\"Posts:\");\n//    console.log(posts);\n\n    // Filter array of events    \n    function filterUpcoming(_ev) {\n      var currentDate = new Date();\n      var eventDate = new Date(_ev.node.date);\n      return eventDate >= currentDate;\n    }\n    const upcomingEvents = posts.filter(filterUpcoming);\n    upcomingEvents.reverse();\n\n    function filterPast(_ev) {\n      var currentDate = new Date();\n      var eventDate = new Date(_ev.node.date);\n      return eventDate < currentDate;\n    }\n    const pastEvents = posts.filter(filterPast);\n\n    // Log array of upcoming events\n//    console.log(\"Upcoming events:\");\n//    console.log(upcomingEvents);\n\n    // Log array of past events\n//    console.log(\"Past events:\");\n//    console.log(pastEvents);\n\n    var upcoming;\n    if (upcomingEvents.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming events</h2>\n            </div>\n          </div>\n\n          {upcomingEvents.map(({ node }) => {\n            if (this.passFilter(node)){\n              return this.returnEventListItem(node);\n            }\n            return null\n          })}\n        </section>\n      );\n    }\n\n    var past;\n    if (pastEvents.length > 0) {\n      past = (\n        <section className=\"past\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Past events</h2>\n            </div>\n          </div>\n\n          {pastEvents.map(({ node }) => {\n            if (this.passFilter(node)){\n              return this.returnEventListItem(node);\n            }\n            return null\n          })}\n        </section>\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n\n    return (\n      <Layout>\n        <Helmet\n          title=\"Events\"\n          meta={[\n            {\n              name: 'description',\n              content: 'Upcoming and past events of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {upcoming}\n\n        {past}\n\n      </Layout>\n\n\n    );\n  }\n}\n\nexport default PankeEvents;\n\n\n//=========================================================================\n\n//                                QUERY\n\n//=========================================================================\n\nexport const pageQuery = graphql`\n  query PankeEventsQuery {\n    allContentfulEvent(\n      sort: { fields: [date], order: DESC }\n\n    ) {\n      edges {\n        node {\n          title\n          slug\n          date\n          endTime\n          openEnd\n          entryfee\n          eventSeries {\n            slug\n            name\n          }\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["EventDateComp","render","eventEnd","thisevent","this","props","event","eventDate","Moment","date","format","eventTime","openEnd","endTime","React","_assertThisInitialized","self","ReferenceError","Tag","componentDidUpdate","state","isToggleOn","filterIsOn","setState","handleTagClick","handleClick","tag","slug","bind","thistag","type","toogle","className","noClick","ref","name","tabindex","onClick","onKeyDown","EventListItem","eventCategory","eventSeries","tagElement","to","title","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","PankeEvents","isFilterOn","filterby","handleEventsClick","tagSlug","passFilter","ev","returnEventListItem","key","componentDidMount","series","posts","get","upcomingEvents","filter","_ev","currentDate","Date","node","reverse","upcoming","past","pastEvents","length","map","meta","content"],"sourceRoot":""}