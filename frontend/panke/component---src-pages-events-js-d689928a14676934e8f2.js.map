{"version":3,"file":"component---src-pages-events-js-d689928a14676934e8f2.js","mappings":"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","sources":["webpack://panke-gallery-website/./src/components/event-date-time.js","webpack://panke-gallery-website/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://panke-gallery-website/./src/components/tag.js","webpack://panke-gallery-website/./src/components/event-list-item.js","webpack://panke-gallery-website/./src/pages/events.js"],"sourcesContent":["import React from 'react';\nimport Moment from 'moment';\n\nclass EventDateComp extends React.Component {\n  render() {\n    var thisevent = this.props.event;\n    var eventDate = Moment(thisevent.date).format('DD MMMM YYYY');\n    var eventTime = Moment(thisevent.date).format('HH:mm')\n\n    var eventEnd;\n    if (thisevent.openEnd) {\n      eventEnd = 'open end';\n    }else{\n      eventEnd = Moment(thisevent.endTime).format('HH:mm');\n    }\n    return(\n      <span>\n        {eventDate} from {eventTime} &thinsp;&ndash;&thinsp;{eventEnd}\n      </span>\n    );\n  }\n}\n\nexport default EventDateComp;\n\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import React from 'react';\n\nclass Tag extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: false};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleTagClick = this.handleTagClick.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.isToggleOn !== this.props.filterIsOn){\n      this.setState(state => ({\n        isToggleOn: this.props.filterIsOn\n      }));\n    }\n  }\n\n  handleTagClick = () =>  {\n    this.props.handleClick(this.props.tag.slug);\n\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n\n//    this.refs.tag.classList.toggle('tag-selected');\n  }\n\n  render() {\n    const thistag = this.props.tag;\n    const type = this.props.type;\n    const toogle = this.state.isToggleOn\n\n    if (type === 'eventSeries' && toogle) {\n      var className = 'tag eventSeries tag-selected';\n    }\n    else if (type === 'eventSeries' && !toogle) {\n      className = 'tag eventSeries';\n    }\n    else{\n      className = 'tag';\n    }\n\n    if (this.props.noClick) {\n      return (\n        <button\n          ref=\"tag\"\n          className={className}\n          aria-label={`Tagged with ${thistag.name}`}\n          tabindex=\"-100\"\n        >\n          {thistag.name}\n        </button>\n      );\n    }\n    else{\n      return (\n        <button\n          ref=\"tag\"\n          className={className}\n          onClick={this.handleTagClick}\n          onKeyDown={this.handleTagClick}\n          aria-label={`Tagged with ${thistag.name}`}\n          tabindex=\"-100\"\n        >\n          {thistag.name}\n        </button>\n      );\n    }\n\n\n  }\n}\n\nexport default Tag;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport EventDate from '../components/event-date-time'\nimport Tag from '../components/tag'\n\n\nclass EventListItem extends React.Component {\n\n  render() {\n    var event = this.props.event;\n\n    var eventCategory;\n\n    if (event.eventSeries!=null) {\n      eventCategory =(\n        <Tag\n          ref={this.tagElement}\n          tag={event.eventSeries}\n          type=\"eventSeries\"\n          handleClick={this.props.handleClick}\n          filterIsOn={this.props.filterIsOn}\n        />\n      );\n    }\n\n    return(\n      <article className=\"news-item\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-4 col-xs-12\">\n              {eventCategory}\n          </div>\n          <div className=\"col-md-8 col-sm-8 col-xs-12\">\n            <h3>\n              <Link to={`/event/${event.slug}`}>{event.title}</Link>\n            </h3>\n            <div dangerouslySetInnerHTML={{\n                __html: event.subtitleShortDescription.childMarkdownRemark.html\n              }} />\n            <p className=\"meta\"><EventDate event={event} /></p>\n          </div>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default EventListItem;\n\n","import React from 'react';\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport EventListItem from '../components/event-list-item'\n\nclass PankeEvents extends React.Component {\n\n  state = {\n    isFilterOn: false,\n    filterby: ''\n  }\n\n  handleEventsClick = (tagSlug) => {\n    this.setState(state => ({\n      isFilterOn: !state.isFilterOn,\n      filterby: {tagSlug}\n    }));\n  }\n\n  passFilter = (ev) => {\n    if (!this.state.isFilterOn) {\n      return true;\n    }\n\n    if (!ev.eventSeries){\n      return false;\n    }\n\n    return this.state.filterby.tagSlug === ev.eventSeries.slug\n  }\n\n  returnEventListItem = (ev) => {\n//    console.log('h√§?')\n    return (\n      <EventListItem\n        key={ev.slug}\n        event={ev}\n        handleClick={this.handleEventsClick}\n        filterIsOn={this.state.isFilterOn}\n      />\n    )\n  }\n\n  componentDidMount = () => {\n    this.props.series && this.setState({\n      isFilterOn: true,\n      filterby: {tagSlug: this.props.series}\n    })\n  }\n\n  render() {\n\n    // Get array of events\n    const posts = get(this, 'props.data.allContentfulEvent.edges')\n\n    // Log array of Events\n//    console.log(\"Posts:\");\n//    console.log(posts);\n\n    // Filter array of events    \n    function filterUpcoming(_ev) {\n      var currentDate = new Date();\n      var eventDate = new Date(_ev.node.date);\n      return eventDate >= currentDate;\n    }\n    const upcomingEvents = posts.filter(filterUpcoming);\n    upcomingEvents.reverse();\n\n    function filterPast(_ev) {\n      var currentDate = new Date();\n      var eventDate = new Date(_ev.node.date);\n      return eventDate < currentDate;\n    }\n    const pastEvents = posts.filter(filterPast);\n\n    // Log array of upcoming events\n//    console.log(\"Upcoming events:\");\n//    console.log(upcomingEvents);\n\n    // Log array of past events\n//    console.log(\"Past events:\");\n//    console.log(pastEvents);\n\n    var upcoming;\n    if (upcomingEvents.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming events</h2>\n            </div>\n          </div>\n\n          {upcomingEvents.map(({ node }) => {\n            if (this.passFilter(node)){\n              return this.returnEventListItem(node);\n            }\n            return null\n          })}\n        </section>\n      );\n    }\n\n    var past;\n    if (pastEvents.length > 0) {\n      past = (\n        <section className=\"past\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Past events</h2>\n            </div>\n          </div>\n\n          {pastEvents.map(({ node }) => {\n            if (this.passFilter(node)){\n              return this.returnEventListItem(node);\n            }\n            return null\n          })}\n        </section>\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n\n    return (\n      <Layout>\n        <Helmet\n          title=\"Events\"\n          meta={[\n            {\n              name: 'description',\n              content: 'Upcoming and past events of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {upcoming}\n\n        {past}\n\n      </Layout>\n\n\n    );\n  }\n}\n\nexport default PankeEvents;\n\n\n//=========================================================================\n\n//                                QUERY\n\n//=========================================================================\n\nexport const pageQuery = graphql`\n  query PankeEventsQuery {\n    allContentfulEvent(\n      sort: { fields: [date], order: DESC }\n\n    ) {\n      edges {\n        node {\n          title\n          slug\n          date\n          endTime\n          openEnd\n          entryfee\n          eventSeries {\n            slug\n            name\n          }\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["EventDateComp","_React$Component","apply","arguments","_inheritsLoose","prototype","render","eventEnd","thisevent","this","props","event","eventDate","Moment","date","format","eventTime","openEnd","endTime","React","_assertThisInitialized","self","ReferenceError","Tag","_this","call","componentDidUpdate","state","isToggleOn","filterIsOn","setState","handleTagClick","handleClick","tag","slug","bind","thistag","type","toogle","className","noClick","ref","name","tabindex","onClick","onKeyDown","EventListItem","eventCategory","eventSeries","tagElement","Link","to","title","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","EventDate","PankeEvents","_len","length","args","Array","_key","concat","isFilterOn","filterby","handleEventsClick","tagSlug","passFilter","ev","returnEventListItem","key","componentDidMount","series","posts","get","upcomingEvents","filter","_ev","currentDate","Date","node","reverse","pastEvents","upcoming","past","map","_ref","_ref2","Layout","Helmet","meta","content"],"sourceRoot":""}