{"version":3,"file":"component---src-pages-exhibitions-js-14621a2a060b4119e763.js","mappings":"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","sources":["webpack://panke-gallery-website/./src/components/exhibition-list-item.js","webpack://panke-gallery-website/./src/pages/exhibitions.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport Moment from 'moment'\n\nclass exhibitionListItem  extends React.Component{\n\n  render(){\n\n    const exhibition = this.props.exhibition\n\n    // --- Date or to be confirmed --\n\n    let dateDisplayed\n\n    if (exhibition.dateTbc){\n      dateDisplayed = \"Date to be confirmed\"\n    }\n    else{\n      dateDisplayed = Moment(exhibition.startDate).format('DD MMMM') + '\\u2009\\u2013\\u2009' + Moment(exhibition.endDate).format('DD MMMM YYYY')\n    }\n\n    // --- Output --\n\n    return(\n      <article className=\"exhibition-item\">\n        <Link to={`/exhibition/${exhibition.slug}`}>\n          <GatsbyImage alt=\"FeaturedImage\" image={exhibition.featuredImage.gatsbyImageData} />\n        </Link>\n        <h3>\n          <Link to={`/exhibition/${exhibition.slug}`}>{exhibition.title}</Link>\n          <small>{dateDisplayed}</small>\n        </h3>\n        <div dangerouslySetInnerHTML={{\n            __html: exhibition.subtitleShortDescription.childMarkdownRemark.html\n          }} />\n      </article>\n    )\n  }\n}\n\nexport default exhibitionListItem\n","import React from 'react';\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Moment from 'moment'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport ExhibitionListItem from '../components/exhibition-list-item'\n\nclass PankeExhibitions extends React.Component {\n\n  filterCurrent = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionStartDate = new Date(_ex.node.startDate);\n    var exhibtionEndDate = new Date(_ex.node.endDate);\n    return Moment(exhibtionStartDate, 'day').utcOffset(120).isSameOrBefore(currentDate, 'day') && Moment(exhibtionEndDate, 'day').utcOffset(120).isSameOrAfter(currentDate, 'day');\n  }\n\n  filterUpcoming = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionStartDate = new Date(_ex.node.startDate);\n    return Moment(exhibtionStartDate, 'day').utcOffset(120).isAfter(currentDate, 'day');\n  }\n\n  filterPast = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionEndDate = new Date(_ex.node.endDate);\n    return Moment(exhibtionEndDate, 'day').utcOffset(120).isBefore(currentDate, 'day');\n  }\n\n  render() {\n\n    // Get array of exhibitions\n    const posts = get(this, 'props.data.allContentfulExhibition.edges')\n\n    // Log array of exhibitions\n    console.log(\"Posts:\", posts);\n\n    // Filter array of exhibitions\n\n    const currentExhibitions = posts.filter(this.filterCurrent);\n    currentExhibitions.reverse();\n\n    const upcomingExhibitions = posts.filter(this.filterUpcoming);\n    upcomingExhibitions.reverse();\n\n    const pastExhibitions = posts.filter(this.filterPast);\n\n    // Log array of current exhibitions\n    console.log(\"Current Exhibitions:\");\n    console.log(currentExhibitions);\n\n    // Log array of upcoming exhibitions\n    console.log(\"Upcoming Exhibitions:\");\n    console.log(upcomingExhibitions);\n\n    // Log array of past exhibitions\n    console.log(\"Past Exhibitions:\");\n    console.log(pastExhibitions);\n\n    var current;\n    if (currentExhibitions.length > 0){\n      current = (\n        <section className=\"currently\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Current</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {currentExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    var upcoming;\n    if (upcomingExhibitions.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {upcomingExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    var past;\n    if (pastExhibitions.length > 0){\n      past = (\n        <section className=\"past\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Past</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {pastExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n    return (\n      <Layout>\n        <Helmet\n          title=\"Exhibitions\"\n          meta={[\n            {\n              name: 'description',\n              content: 'Upcoming and past exhibitions of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {current}\n\n        {upcoming}\n\n        {past}\n\n      </Layout>\n    );\n  }\n}\n\nexport default PankeExhibitions;\n\n\n//=========================================================================\n\n//                                QUERY\n\n//=========================================================================\n\nexport const pageQuery = graphql`\n  query PankeExhibitionsQuery {\n    allContentfulExhibition(\n      sort: { fields: [startDate], order: DESC }\n\n    ) {\n      edges {\n        node {\n          title\n          slug\n          startDate\n          endDate\n          dateTbc\n          #startDate(formatString: \"DD MMMM YYYY\")\n          #endDate(formatString: \"DD MMMM YYYY\")\n          featuredImage {\n            gatsbyImageData(\n              layout: CONSTRAINED,\n              width: 1050,\n              placeholder: BLURRED\n            )\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n          #openingHours\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n"],"names":["exhibitionListItem","render","dateDisplayed","exhibition","this","props","dateTbc","Moment","startDate","format","endDate","className","to","slug","G","alt","image","featuredImage","gatsbyImageData","title","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","React","PankeExhibitions","filterCurrent","_ex","currentDate","Date","exhibtionStartDate","node","exhibtionEndDate","utcOffset","isSameOrBefore","isSameOrAfter","filterUpcoming","isAfter","filterPast","isBefore","posts","get","console","log","currentExhibitions","filter","reverse","upcomingExhibitions","current","upcoming","past","pastExhibitions","length","map","key","Helmet","meta","name","content"],"sourceRoot":""}