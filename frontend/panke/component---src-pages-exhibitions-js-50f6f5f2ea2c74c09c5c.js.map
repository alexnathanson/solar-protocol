{"version":3,"sources":["webpack:///./src/components/exhibition-list-item.js","webpack:///./src/pages/exhibitions.js"],"names":["exhibition","className","to","slug","alt","sizes","featuredImage","aspectRatio","title","Moment","startDate","format","endDate","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","PankeExhibitions","render","posts","get","this","console","log","currentExhibitions","filter","_ex","currentDate","Date","exhibtionStartDate","node","exhibtionEndDate","utcOffset","isSameOrBefore","isSameOrAfter","reverse","upcomingExhibitions","isAfter","current","upcoming","past","pastExhibitions","isBefore","length","map","key","meta","name","content","React","Component"],"mappings":"oPAKe,kBAAGA,EAAH,EAAGA,WAAH,OACb,6BAASC,UAAU,mBACjB,kBAAC,IAAD,CAAMC,GAAE,eAAiBF,EAAWG,MAClC,kBAAC,IAAD,CAAKC,IAAI,gBAAgBC,MAAK,iBAAML,EAAWM,cAAcD,MAA/B,CAAuCE,YAAa,GAAG,OAEvF,4BACE,kBAAC,IAAD,CAAML,GAAE,eAAiBF,EAAWG,MAASH,EAAWQ,OACxD,+BAAQC,IAAOT,EAAWU,WAAWC,OAAO,WAA5C,MAA+EF,IAAOT,EAAWY,SAASD,OAAO,kBAEnH,yBAAKE,wBAAyB,CAC1BC,OAAQd,EAAWe,yBAAyBC,oBAAoBC,UCNlEC,E,kGACJC,OAAA,WAGE,IAAMC,EAAQC,IAAIC,KAAM,4CAGxBC,QAAQC,IAAI,UACZD,QAAQC,IAAIJ,GAWZ,IAAMK,EAAqBL,EAAMM,QARjC,SAAuBC,GACrB,IAAIC,EAAc,IAAIC,KAClBC,EAAqB,IAAID,KAAKF,EAAII,KAAKrB,WACvCsB,EAAmB,IAAIH,KAAKF,EAAII,KAAKnB,SAGzC,OAAOH,IAAOqB,EAAoB,OAAOG,UAAU,KAAKC,eAAeN,EAAa,QAAUnB,IAAOuB,EAAkB,OAAOC,UAAU,KAAKE,cAAcP,EAAa,UAG1KH,EAAmBW,UAOnB,IAAMC,EAAsBjB,EAAMM,QALlC,SAAwBC,GACtB,IAAIC,EAAc,IAAIC,KAClBC,EAAqB,IAAID,KAAKF,EAAII,KAAKrB,WAC3C,OAAOD,IAAOqB,EAAoB,OAAOG,UAAU,KAAKK,QAAQV,EAAa,UAG/ES,EAAoBD,UAOpB,IAcIG,EAwBAC,EAwBAC,EA9DEC,EAAkBtB,EAAMM,QAL9B,SAAoBC,GAClB,IAAIC,EAAc,IAAIC,KAClBG,EAAmB,IAAIH,KAAKF,EAAII,KAAKnB,SACzC,OAAOH,IAAOuB,EAAkB,OAAOC,UAAU,KAAKU,SAASf,EAAa,UA8F9E,OAzFAL,QAAQC,IAAI,wBACZD,QAAQC,IAAIC,GAGZF,QAAQC,IAAI,yBACZD,QAAQC,IAAIa,GAGZd,QAAQC,IAAI,qBACZD,QAAQC,IAAIkB,GAGRjB,EAAmBmB,OAAS,IAC9BL,EACE,6BAAStC,UAAU,aAEjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,yCAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACZwB,EAAmBoB,KAAI,YAAe,IAAZd,EAAW,EAAXA,KACzB,OACE,kBAAC,EAAD,CAAoBe,IAAKf,EAAK5B,KAAMH,WAAY+B,WAU1DM,EAAoBO,OAAS,IAC/BJ,EACE,6BAASvC,UAAU,YAEjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,0CAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACZoC,EAAoBQ,KAAI,YAAe,IAAZd,EAAW,EAAXA,KAC1B,OACE,kBAAC,EAAD,CAAoBe,IAAKf,EAAK5B,KAAMH,WAAY+B,WAU1DW,EAAgBE,OAAS,IAC3BH,EACE,6BAASxC,UAAU,QAEjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,sCAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACZyC,EAAgBG,KAAI,YAAe,IAAZd,EAAW,EAAXA,KACtB,OACE,kBAAC,EAAD,CAAoBe,IAAKf,EAAK5B,KAAMH,WAAY+B,WAgB5D,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvB,MAAM,cACNuC,KAAM,CACJ,CACEC,KAAM,cACNC,QAAS,oPAKdV,EAEAC,EAEAC,I,GA/IsBS,IAAMC,WAsJtBjC","file":"component---src-pages-exhibitions-js-50f6f5f2ea2c74c09c5c.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Moment from 'moment'\n\nexport default ({ exhibition }) => (\n  <article className=\"exhibition-item\">\n    <Link to={`/exhibition/${exhibition.slug}`}>\n      <Img alt=\"FeaturedImage\" sizes={{...exhibition.featuredImage.sizes , aspectRatio: 16/9}} />\n    </Link>\n    <h3>\n      <Link to={`/exhibition/${exhibition.slug}`}>{exhibition.title}</Link>\n      <small>{Moment(exhibition.startDate).format('DD MMMM')}&thinsp;&ndash;&thinsp;{Moment(exhibition.endDate).format('DD MMMM YYYY')}</small>\n    </h3>\n    <div dangerouslySetInnerHTML={{\n        __html: exhibition.subtitleShortDescription.childMarkdownRemark.html\n      }} />\n  </article>\n)\n","import React from 'react';\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Moment from 'moment'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport ExhibitionListItem from '../components/exhibition-list-item'\n\nclass PankeExhibitions extends React.Component {\n  render() {\n\n    // Get array of exhibitions\n    const posts = get(this, 'props.data.allContentfulExhibition.edges')\n\n    // Log array of exhibitions\n    console.log(\"Posts:\");\n    console.log(posts);\n\n    // Filter array of exhibitions\n    function filterCurrent(_ex) {\n      var currentDate = new Date();\n      var exhibtionStartDate = new Date(_ex.node.startDate);\n      var exhibtionEndDate = new Date(_ex.node.endDate);\n      // Moment(exhibtionEndDate).isSameOrAfter(Moment(currentDate, 'day'));\n      // return Moment(exhibtionEndDate, 'day').isSameOrAfter(Moment(currentDate, 'day')) && currentDate >= exhibtionStartDate;\n      return Moment(exhibtionStartDate, 'day').utcOffset(120).isSameOrBefore(currentDate, 'day') && Moment(exhibtionEndDate, 'day').utcOffset(120).isSameOrAfter(currentDate, 'day');\n    }\n    const currentExhibitions = posts.filter(filterCurrent);\n    currentExhibitions.reverse();\n\n    function filterUpcoming(_ex) {\n      var currentDate = new Date();\n      var exhibtionStartDate = new Date(_ex.node.startDate);\n      return Moment(exhibtionStartDate, 'day').utcOffset(120).isAfter(currentDate, 'day');\n    }\n    const upcomingExhibitions = posts.filter(filterUpcoming);\n    upcomingExhibitions.reverse();\n\n    function filterPast(_ex) {\n      var currentDate = new Date();\n      var exhibtionEndDate = new Date(_ex.node.endDate);\n      return Moment(exhibtionEndDate, 'day').utcOffset(120).isBefore(currentDate, 'day');\n    }\n    const pastExhibitions = posts.filter(filterPast);\n\n    // Log array of current exhibitions\n    console.log(\"Current Exhibitions:\");\n    console.log(currentExhibitions);\n\n    // Log array of upcoming exhibitions\n    console.log(\"Upcoming Exhibitions:\");\n    console.log(upcomingExhibitions);\n\n    // Log array of past exhibitions\n    console.log(\"Past Exhibitions:\");\n    console.log(pastExhibitions);\n\n    var current;\n    if (currentExhibitions.length > 0){\n      current = (\n        <section className=\"currently\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Current</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {currentExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    var upcoming;\n    if (upcomingExhibitions.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {upcomingExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    var past;\n    if (pastExhibitions.length > 0){\n      past = (\n        <section className=\"past\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Past</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {pastExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n    return (\n      <Layout>\n        <Helmet\n          title=\"Exhibitions\"\n          meta={[\n            {\n              name: 'description',\n              content: 'Upcoming and past exhibitions of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {current}\n\n        {upcoming}\n\n        {past}\n\n      </Layout>\n    );\n  }\n}\n\nexport default PankeExhibitions;\n\n\n//=========================================================================\n\n//                                QUERY\n\n//=========================================================================\n\nexport const pageQuery = graphql`\n  query PankeExhibitionsQuery {\n    allContentfulExhibition(\n      sort: { fields: [startDate], order: DESC }\n\n    ) {\n      edges {\n        node {\n          title\n          slug\n          startDate\n          endDate\n          #startDate(formatString: \"DD MMMM YYYY\")\n          #endDate(formatString: \"DD MMMM YYYY\")\n          featuredImage {\n            sizes(maxWidth: 1000) {\n             ...GatsbyContentfulSizes\n            }\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n          openingHours\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n"],"sourceRoot":""}