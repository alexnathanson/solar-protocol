{"version":3,"file":"component---src-pages-exhibitions-js-c8a2557c60562654ae78.js","mappings":"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","sources":["webpack://panke-gallery-website/./src/components/exhibition-list-item.js","webpack://panke-gallery-website/./src/pages/exhibitions.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport Moment from 'moment'\n\nclass exhibitionListItem  extends React.Component{\n\n  render(){\n\n    const exhibition = this.props.exhibition\n\n    // --- Date or to be confirmed --\n\n    let dateDisplayed\n\n    if (exhibition.dateTbc){\n      dateDisplayed = \"Date to be confirmed\"\n    }\n    else{\n      dateDisplayed = Moment(exhibition.startDate).format('DD MMMM') + '\\u2009\\u2013\\u2009' + Moment(exhibition.endDate).format('DD MMMM YYYY')\n    }\n\n    // --- Output --\n\n    return(\n      <article className=\"exhibition-item\">\n        <Link to={`/exhibition/${exhibition.slug}`}>\n          <GatsbyImage alt=\"FeaturedImage\" image={exhibition.featuredImage.gatsbyImageData} />\n        </Link>\n        <h3>\n          <Link to={`/exhibition/${exhibition.slug}`}>{exhibition.title}</Link>\n          <small>{dateDisplayed}</small>\n        </h3>\n        <div dangerouslySetInnerHTML={{\n            __html: exhibition.subtitleShortDescription.childMarkdownRemark.html\n          }} />\n      </article>\n    )\n  }\n}\n\nexport default exhibitionListItem\n","import React from 'react';\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Moment from 'moment'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport ExhibitionListItem from '../components/exhibition-list-item'\n\nclass PankeExhibitions extends React.Component {\n\n  filterCurrent = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionStartDate = new Date(_ex.node.startDate);\n    var exhibtionEndDate = new Date(_ex.node.endDate);\n    return Moment(exhibtionStartDate, 'day').utcOffset(120).isSameOrBefore(currentDate, 'day') && Moment(exhibtionEndDate, 'day').utcOffset(120).isSameOrAfter(currentDate, 'day');\n  }\n\n  filterUpcoming = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionStartDate = new Date(_ex.node.startDate);\n    return Moment(exhibtionStartDate, 'day').utcOffset(120).isAfter(currentDate, 'day');\n  }\n\n  filterPast = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionEndDate = new Date(_ex.node.endDate);\n    return Moment(exhibtionEndDate, 'day').utcOffset(120).isBefore(currentDate, 'day');\n  }\n\n  render() {\n\n    // Get array of exhibitions\n    const posts = get(this, 'props.data.allContentfulExhibition.edges')\n\n    // Log array of exhibitions\n    console.log(\"Posts:\", posts);\n\n    // Filter array of exhibitions\n\n    const currentExhibitions = posts.filter(this.filterCurrent);\n    currentExhibitions.reverse();\n\n    const upcomingExhibitions = posts.filter(this.filterUpcoming);\n    upcomingExhibitions.reverse();\n\n    const pastExhibitions = posts.filter(this.filterPast);\n\n    // Log array of current exhibitions\n    console.log(\"Current Exhibitions:\");\n    console.log(currentExhibitions);\n\n    // Log array of upcoming exhibitions\n    console.log(\"Upcoming Exhibitions:\");\n    console.log(upcomingExhibitions);\n\n    // Log array of past exhibitions\n    console.log(\"Past Exhibitions:\");\n    console.log(pastExhibitions);\n\n    var current;\n    if (currentExhibitions.length > 0){\n      current = (\n        <section className=\"currently\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Current</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {currentExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    var upcoming;\n    if (upcomingExhibitions.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {upcomingExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    var past;\n    if (pastExhibitions.length > 0){\n      past = (\n        <section className=\"past\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Past</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {pastExhibitions.map(({ node }) => {\n                return (\n                  <ExhibitionListItem key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n    return (\n      <Layout>\n        <Helmet\n          title=\"Exhibitions\"\n          meta={[\n            {\n              name: 'description',\n              content: 'Upcoming and past exhibitions of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {current}\n\n        {upcoming}\n\n        {past}\n\n      </Layout>\n    );\n  }\n}\n\nexport default PankeExhibitions;\n\n\n//=========================================================================\n\n//                                QUERY\n\n//=========================================================================\n\nexport const pageQuery = graphql`\n  query PankeExhibitionsQuery {\n    allContentfulExhibition(\n      sort: { fields: [startDate], order: DESC }\n\n    ) {\n      edges {\n        node {\n          title\n          slug\n          startDate\n          endDate\n          dateTbc\n          #startDate(formatString: \"DD MMMM YYYY\")\n          #endDate(formatString: \"DD MMMM YYYY\")\n          featuredImage {\n            gatsbyImageData(\n              layout: CONSTRAINED,\n              width: 1050,\n              placeholder: BLURRED\n            )\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n          #openingHours\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n"],"names":["exhibitionListItem","_React$Component","apply","arguments","_inheritsLoose","prototype","render","exhibition","this","props","dateDisplayed","dateTbc","Moment","startDate","format","endDate","React","className","Link","to","slug","GatsbyImage","alt","image","featuredImage","gatsbyImageData","title","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","PankeExhibitions","_this","_len","length","args","Array","_key","call","concat","filterCurrent","_ex","currentDate","Date","exhibtionStartDate","node","exhibtionEndDate","utcOffset","isSameOrBefore","isSameOrAfter","filterUpcoming","isAfter","filterPast","isBefore","posts","get","console","log","currentExhibitions","filter","reverse","upcomingExhibitions","pastExhibitions","current","upcoming","past","map","_ref","ExhibitionListItem","key","_ref2","_ref3","Layout","Helmet","meta","name","content"],"sourceRoot":""}