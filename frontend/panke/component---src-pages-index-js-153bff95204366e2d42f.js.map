{"version":3,"file":"component---src-pages-index-js-153bff95204366e2d42f.js","mappings":"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","sources":["webpack://panke-gallery-website/./src/components/event-date-time.js","webpack://panke-gallery-website/./src/components/exhibition-preview.js","webpack://panke-gallery-website/./src/components/event-preview.js","webpack://panke-gallery-website/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport Moment from 'moment';\n\nclass EventDateComp extends React.Component {\n  render() {\n    var thisevent = this.props.event;\n    var eventDate = Moment(thisevent.date).format('DD MMMM YYYY');\n    var eventTime = Moment(thisevent.date).format('HH:mm')\n\n    var eventEnd;\n    if (thisevent.openEnd) {\n      eventEnd = 'open end';\n    }else{\n      eventEnd = Moment(thisevent.endTime).format('HH:mm');\n    }\n    return(\n      <span>\n        {eventDate} from {eventTime} &thinsp;&ndash;&thinsp;{eventEnd}\n      </span>\n    );\n  }\n}\n\nexport default EventDateComp;\n\n","import React from 'react'\nimport { Link } from 'gatsby'\n//import Img from 'gatsby-image'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport Moment from 'moment'\n\nclass exhibitionPreview extends React.Component {\n\n  render(){\n\n    const exhibition = this.props.exhibition\n\n    // --- Date or to be confirmed --\n\n    let dateDisplayed\n\n    if (exhibition.dateTbc){\n      dateDisplayed = \"Date to be confirmed\"\n    }\n    else{\n      dateDisplayed = Moment(exhibition.startDate).format('DD MMMM') + '\\u2009\\u2013\\u2009' + Moment(exhibition.endDate).format('DD MMMM YYYY')\n    }\n\n    if (exhibition.openingHours){\n      dateDisplayed = dateDisplayed + ' | ' + exhibition.openingHours\n    }\n\n    if (exhibition.vernissageInfos){\n      dateDisplayed = dateDisplayed + ' | ' + exhibition.vernissageInfos\n    }\n\n    // --- Output --\n\n    return(\n      <article className=\"exhibition-item\">\n        <Link to={`/exhibition/${exhibition.slug}`}>\n          <GatsbyImage alt=\"FeaturedImage\" image={exhibition.featuredImage.gatsbyImageData} aspectratio={16/9} />\n        </Link>\n        <h3>\n          <Link to={`/exhibition/${exhibition.slug}`}>{exhibition.title}</Link>\n        </h3>\n        <div dangerouslySetInnerHTML={{\n            __html: exhibition.subtitleShortDescription.childMarkdownRemark.html\n          }} />\n        <p className=\"meta\">\n          {dateDisplayed}\n        </p>\n      </article>\n    )\n\n  }\n\n}\n\nexport default exhibitionPreview\n","import React from 'react'\nimport { Link } from 'gatsby'\n//import Img from 'gatsby-image'\n//import Moment from 'moment'\nimport EventDate from '../components/event-date-time'\n\n\nclass EventPreview extends React.Component {\n  render() {\n    var event = this.props.event;\n\n    var eventCategory;\n    if (event.eventSeries!=null) {\n      eventCategory =(\n        <p className=\"tag\">\n          {event.eventSeries.name}\n        </p>\n      );\n    }\n    var eventTags;\n    if (event.tags!=null){\n      eventTags =(\n        event.tags.map(({slug, name}) => {\n          return (\n            <p className=\"tag\" key={slug}>\n              {name}\n            </p>\n          )\n        })\n      );\n    }\n\n    return(\n      <article className=\"news-item\">\n            <div>{eventCategory}{eventTags}</div>\n            <h3>\n              <Link to={`/event/${event.slug}`}>{event.title}</Link>\n            </h3>\n            <div dangerouslySetInnerHTML={{\n                __html: event.subtitleShortDescription.childMarkdownRemark.html\n              }} />\n            <p className=\"meta\"><EventDate event={event} /></p>\n\n      </article>\n    );\n  }\n}\n\nexport default EventPreview\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Moment from 'moment'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport ExhibitionPreview from '../components/exhibition-preview'\nimport EventPreview from '../components/event-preview'\n\n\nclass PankeIndex extends React.Component {\n\n\n  filterCurrent = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionStartDate = new Date(_ex.node.startDate);\n    var exhibtionEndDate = new Date(_ex.node.endDate);\n    return Moment(exhibtionStartDate, 'day').utcOffset(120).isSameOrBefore(currentDate, 'day') && Moment(exhibtionEndDate, 'day').utcOffset(120).isSameOrAfter(currentDate, 'day');\n  }\n\n  filterUpcoming = (_ex) => {\n    var currentDate = new Date();\n    var exhibtionStartDate = new Date(_ex.node.startDate);\n//    return Moment(exhibtionStartDate, 'day').utcOffset(120).isAfter(currentDate, 'day') && !_ex.node.dateTbc;\n    return Moment(exhibtionStartDate, 'day').utcOffset(120).isAfter(currentDate, 'day');\n  }\n\n  filterUpcomingEvents = (_ev) => {\n    var currentDate = new Date();\n    var eventStartDate = new Date(_ev.node.date);\n    return Moment(eventStartDate, 'day').utcOffset(120).isSameOrAfter(currentDate, 'day');\n  }\n\n  render() {\n\n    console.log('Context: ', get(this.props, 'pageContext'))\n    // Get array of exhibitions\n    const exhibitions = get(this, 'props.data.allContentfulExhibition.edges')\n\n    // Get array of events\n    const events = get(this, 'props.data.allContentfulEvent.edges')\n    \n    // Get array of news\n    const newsItems = get(this, 'props.data.allContentfulContentBlock.edges')\n\n//    console.log(\"Exhibitions:\", posts);\n  //  console.log(\"Events:\", posts);\n//    console.log(\"news:\", newsItems);\n    \n    // Filter array of exhibitions\n    const currentExhibitions = exhibitions.filter(this.filterCurrent);\n    const upcomingExhibitions = exhibitions.filter(this.filterUpcoming);\n\n    // Filter array of events and slice to first 2\n    const upcomingEvents = events.filter(this.filterUpcomingEvents).slice(0,2);\n    // Filter by GraphQL (not working, only updated on rebuild)\n//    const upcomingEvents = events\n\n    // Log exhibitions\n//    console.log(\"Current Exhibitions:\", currentExhibitions);\n//    console.log(\"Upcoming Exhibitions:\", upcomingExhibitions);\n   console.log(\"Upcoming Events:\", upcomingEvents);\n\n    // Create news code\n    var news;\n    if (newsItems.length > 0){\n      news = (\n        <section className=\"news\">\n          {newsItems.map(({node}) => {\n            return (\n              <article key={node.id} className=\"news-item\">\n                <div className=\"row headline\">\n                  <div className=\"col-md-12 col-sm-12 col-xs-12\">\n                    <h2>{node.title}</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  {<div className=\"col-md-12 col-sm-12 col-xs-12\" dangerouslySetInnerHTML={{\n                      __html: node.blockContent.childMarkdownRemark.html\n                    }} />}\n                </div>\n              </article>\n            )\n          })}\n\n        </section>\n      );\n    }\n\n    // Create upcoming events code if there are\n    var upcomingEv;\n    if (upcomingEvents.length > 0){\n      upcomingEv = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-8 col-sm-8 col-xs-12\">\n              <h2>Upcoming events</h2>\n            </div>\n            <div className=\"col-md-4 col-sm-4 col-xs-12 text-sm-right d-none d-sm-block pt-4\">\n              <Link to={'events'}><button className=\"eventSeries\">See all events</button></Link>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {upcomingEvents.map(({ node }) => {\n                return (\n                    <EventPreview key={node.id} event={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    // Create current exhibitions code if there are\n    var current;\n    if (currentExhibitions.length > 0){\n      current = (\n        <section className=\"currently\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Current exhibitions</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {currentExhibitions.map(({ node }) => {\n                return (\n                    <ExhibitionPreview key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    // Create upcoming exhibitions code if there are\n    var upcoming;\n    if (upcomingExhibitions.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming exhibitions</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {upcomingExhibitions.map(({ node }) => {\n                return (\n                    <ExhibitionPreview key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <Layout>\n        <Helmet\n          title= '  Home'\n          meta={[\n            {\n              name: 'description',\n              content: 'News and upcoming exhibitions of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {news}\n\n        {upcomingEv}\n\n        {current}\n\n        {upcoming}\n\n      </Layout>\n\n    );\n  }\n}\n\nexport default PankeIndex\n\nexport const pageQuery = graphql`\n  query PankeHomeQuery($today: Date!) {\n    allContentfulExhibition(\n      sort: { fields: [startDate], order: ASC },\n      # limit: 3,\n      filter: {endDate: {gte: $today}}\n      )\n     {\n      edges {\n        node {\n          title\n          slug\n          startDate\n          endDate\n          dateTbc\n          featuredImage {\n            gatsbyImageData(\n              layout: CONSTRAINED,\n              width: 1050\n            )\n          }\n          openingHours\n          vernissageInfos\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulEvent(\n        sort: { fields: [date], order: ASC },\n        # limit: 2,\n        filter: {date: {gte: $today}}\n      ){\n      edges {\n        node {\n          title\n          slug\n          date\n          endTime\n          openEnd\n          tags {\n            name\n            slug\n          }\n          eventSeries {\n            name\n            slug\n          }\n          subtitleShortDescription {\n            childMarkdownRemark{\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulContentBlock (\n        filter: {page: {eq: \"News\"}},\n        sort: { fields: [updatedAt], order: DESC}\n      ){\n      edges {\n        node {\n          id\n          title\n          page\n          slug\n          blockContent {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["EventDateComp","_React$Component","apply","arguments","_inheritsLoose","prototype","render","eventEnd","thisevent","this","props","event","eventDate","Moment","date","format","eventTime","openEnd","endTime","React","exhibitionPreview","exhibition","dateDisplayed","dateTbc","startDate","endDate","openingHours","vernissageInfos","className","Link","to","slug","GatsbyImage","alt","image","featuredImage","gatsbyImageData","aspectratio","title","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","EventPreview","eventCategory","eventTags","eventSeries","name","tags","map","_ref","key","EventDate","PankeIndex","_this","_len","length","args","Array","_key","call","concat","filterCurrent","_ex","currentDate","Date","exhibtionStartDate","node","exhibtionEndDate","utcOffset","isSameOrBefore","isSameOrAfter","filterUpcoming","isAfter","filterUpcomingEvents","_ev","eventStartDate","console","log","get","exhibitions","events","newsItems","currentExhibitions","filter","upcomingExhibitions","upcomingEvents","slice","news","upcomingEv","current","upcoming","id","blockContent","_ref2","_ref3","ExhibitionPreview","_ref4","Layout","Helmet","meta","content"],"sourceRoot":""}