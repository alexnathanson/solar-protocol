{"version":3,"sources":["webpack:///./src/components/exhibition-preview.js","webpack:///./src/pages/index.js"],"names":["exhibition","className","to","slug","alt","sizes","featuredImage","aspectRatio","title","dangerouslySetInnerHTML","__html","subtitleShortDescription","childMarkdownRemark","html","Moment","startDate","format","endDate","openingHours","vernissageInfos","PankeIndex","render","posts","get","this","newsItems","console","log","currentExhibitions","filter","_ex","currentDate","Date","exhibtionStartDate","node","exhibtionEndDate","utcOffset","isSameOrBefore","isSameOrAfter","news","current","upcoming","upcomingExhibitions","isAfter","length","map","key","id","blockContent","meta","name","content","React","Component"],"mappings":"oPAKe,kBAAGA,EAAH,EAAGA,WAAH,OACb,6BAASC,UAAU,mBACjB,kBAAC,IAAD,CAAMC,GAAE,eAAiBF,EAAWG,MAClC,kBAAC,IAAD,CAAKC,IAAI,gBAAgBC,MAAK,iBAAML,EAAWM,cAAcD,MAA/B,CAAuCE,YAAa,GAAG,OAEvF,4BACE,kBAAC,IAAD,CAAML,GAAE,eAAiBF,EAAWG,MAASH,EAAWQ,QAE1D,yBAAKC,wBAAyB,CAC1BC,OAAQV,EAAWW,yBAAyBC,oBAAoBC,QAEpE,uBAAGZ,UAAU,QACVa,IAAOd,EAAWe,WAAWC,OAAO,WADvC,MAC0EF,IAAOd,EAAWiB,SAASD,OAAO,gBACzGhB,EAAWkB,cAAgB,MAAQlB,EAAWkB,aAC9ClB,EAAWmB,iBAAmB,MAAQnB,EAAWmB,mBCTlDC,E,kGACJC,OAAA,WAGE,IAAMC,EAAQC,IAAIC,KAAM,4CAGlBC,EAAYF,IAAIC,KAAM,8CAO5BE,QAAQC,IAAI,SACZD,QAAQC,IAAIF,GASZ,IAAMG,EAAqBN,EAAMO,QANjC,SAAuBC,GACrB,IAAIC,EAAc,IAAIC,KAClBC,EAAqB,IAAID,KAAKF,EAAII,KAAKnB,WACvCoB,EAAmB,IAAIH,KAAKF,EAAII,KAAKjB,SACzC,OAAOH,IAAOmB,EAAoB,OAAOG,UAAU,KAAKC,eAAeN,EAAa,QAAUjB,IAAOqB,EAAkB,OAAOC,UAAU,KAAKE,cAAcP,EAAa,UAS1K,IAWIQ,EA0BAC,EAyBAC,EA9DEC,EAAsBpB,EAAMO,QALlC,SAAwBC,GACtB,IAAIC,EAAc,IAAIC,KAClBC,EAAqB,IAAID,KAAKF,EAAII,KAAKnB,WAC3C,OAAOD,IAAOmB,EAAoB,OAAOG,UAAU,KAAKO,QAAQZ,EAAa,UAwF/E,OA1EIN,EAAUmB,OAAS,IACrBL,EACE,6BAAStC,UAAU,QAChBwB,EAAUoB,KAAI,YAAa,IAAXX,EAAU,EAAVA,KACf,OACE,6BAASY,IAAKZ,EAAKa,GAAI9C,UAAU,aAC/B,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,4BAAKiC,EAAK1B,SAGd,yBAAKP,UAAU,OACZ,yBAAKA,UAAU,gCAAgCQ,wBAAyB,CACrEC,OAAQwB,EAAKc,aAAapC,oBAAoBC,eAa5De,EAAmBgB,OAAS,IAC9BJ,EACE,6BAASvC,UAAU,aAEjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,yCAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACZ2B,EAAmBiB,KAAI,YAAe,IAAZX,EAAW,EAAXA,KACzB,OACI,kBAAC,EAAD,CAAmBY,IAAKZ,EAAK/B,KAAMH,WAAYkC,WAW3DQ,EAAoBE,OAAS,IAC/BH,EACE,6BAASxC,UAAU,YAEjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,0CAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACZyC,EAAoBG,KAAI,YAAe,IAAZX,EAAW,EAAXA,KAC1B,OACI,kBAAC,EAAD,CAAmBY,IAAKZ,EAAK/B,KAAMH,WAAYkC,WAU7D,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1B,MAAO,SACPyC,KAAM,CACJ,CACEC,KAAM,cACNC,QAAS,oPAKdZ,EAEAC,EAEAC,I,GArIgBW,IAAMC,WA6IhBjC","file":"component---src-pages-index-js-ae50444d7a831227e2c2.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Moment from 'moment'\n\nexport default ({ exhibition }) => (\n  <article className=\"exhibition-item\">\n    <Link to={`/exhibition/${exhibition.slug}`}>\n      <Img alt=\"FeaturedImage\" sizes={{...exhibition.featuredImage.sizes , aspectRatio: 16/9}} />\n    </Link>\n    <h3>\n      <Link to={`/exhibition/${exhibition.slug}`}>{exhibition.title}</Link>\n    </h3>\n    <div dangerouslySetInnerHTML={{\n        __html: exhibition.subtitleShortDescription.childMarkdownRemark.html\n      }} />\n    <p className=\"meta\">\n      {Moment(exhibition.startDate).format('DD MMMM')}&thinsp;&ndash;&thinsp;{Moment(exhibition.endDate).format('DD MMMM YYYY')}\n      {exhibition.openingHours && ' | ' }{exhibition.openingHours}\n      {exhibition.vernissageInfos && ' | ' }{exhibition.vernissageInfos}\n    </p>\n  </article>\n)\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Moment from 'moment'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport ExhibitionPreview from '../components/exhibition-preview'\n\n\nclass PankeIndex extends React.Component {\n  render() {\n\n    // Get array of exhibitions\n    const posts = get(this, 'props.data.allContentfulExhibition.edges')\n    \n    // Get array of news\n    const newsItems = get(this, 'props.data.allContentfulContentBlock.edges')\n\n    // Log array of all exhibitions\n//    console.log(\"Posts:\");\n//    console.log(posts);\n    \n    // Log array of news\n    console.log(\"news:\");\n    console.log(newsItems);\n    \n    // Filter array of exhibitions\n    function filterCurrent(_ex) {\n      var currentDate = new Date();\n      var exhibtionStartDate = new Date(_ex.node.startDate);\n      var exhibtionEndDate = new Date(_ex.node.endDate);\n      return Moment(exhibtionStartDate, 'day').utcOffset(120).isSameOrBefore(currentDate, 'day') && Moment(exhibtionEndDate, 'day').utcOffset(120).isSameOrAfter(currentDate, 'day');\n    }\n    const currentExhibitions = posts.filter(filterCurrent);\n\n    function filterUpcoming(_ex) {\n      var currentDate = new Date();\n      var exhibtionStartDate = new Date(_ex.node.startDate);\n      return Moment(exhibtionStartDate, 'day').utcOffset(120).isAfter(currentDate, 'day');\n    }\n    const upcomingExhibitions = posts.filter(filterUpcoming);\n\n    // Log array of current exhibitions\n//    console.log(\"Current Exhibitions:\");\n//    console.log(currentExhibitions);\n\n    // Log array of upcoming exhibitions\n//    console.log(\"Upcoming Exhibitions:\");\n//    console.log(upcomingExhibitions);\n\n    // Create news code\n    var news;\n    if (newsItems.length > 0){\n      news = (\n        <section className=\"news\">\n          {newsItems.map(({node}) => {\n            return (\n              <article key={node.id} className=\"news-item\">\n                <div className=\"row headline\">\n                  <div className=\"col-md-12 col-sm-12 col-xs-12\">\n                    <h2>{node.title}</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  {<div className=\"col-md-12 col-sm-12 col-xs-12\" dangerouslySetInnerHTML={{\n                      __html: node.blockContent.childMarkdownRemark.html\n                    }} />}\n                </div>\n              </article>\n            )\n          })}\n\n        </section>\n      );\n    }\n\n    // Create current exhibitions code if there are\n    var current;\n    if (currentExhibitions.length > 0){\n      current = (\n        <section className=\"currently\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Current</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {currentExhibitions.map(({ node }) => {\n                return (\n                    <ExhibitionPreview key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    // Create upcoming exhibitions code if there are\n    var upcoming;\n    if (upcomingExhibitions.length > 0){\n      upcoming = (\n        <section className=\"upcoming\">\n\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n              <h2>Upcoming</h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-8 col-xs-12\">\n              {upcomingExhibitions.map(({ node }) => {\n                return (\n                    <ExhibitionPreview key={node.slug} exhibition={node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <Layout>\n        <Helmet\n          title= '  Home'\n          meta={[\n            {\n              name: 'description',\n              content: 'News and upcoming exhibitions of panke.gallery in Berlin-Wedding. The gallery seeks to open up a dialogue between established and emerging artists whose work comes out of the connections between digital or net-based art and club culture.'\n            }\n          ]}\n        />\n\n        {news}\n\n        {current}\n\n        {upcoming}\n\n      </Layout>\n\n    );\n  }\n}\n\nexport default PankeIndex\n\nexport const pageQuery = graphql`\n  query PankeHomeQuery {\n    allContentfulExhibition(\n      sort: { fields: [startDate], order: ASC }\n\n    ) {\n      edges {\n        node {\n          title\n          slug\n          startDate\n          endDate\n          #startDate(formatString: \"DD MMMM YYYY\")\n          #endDate(formatString: \"DD MMMM YYYY\")\n          featuredImage {\n            sizes(maxWidth: 1000) {\n             ...GatsbyContentfulSizes\n            }\n          }\n          openingHours\n          vernissageInfos\n          subtitleShortDescription {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulContentBlock (filter: {page: {eq: \"News\"}}, sort: { fields: [createdAt], order: ASC}){\n      edges {\n        node {\n          id\n          title\n          page\n          slug\n          blockContent {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}