{"version":3,"file":"component---src-templates-event-js-a244668f6e371cfe5f06.js","mappings":"iJAiBA,IAfqBA,IAAA,IAAC,WAAEC,EAAU,aAAEC,GAAcF,EAAA,OAC1CG,EAAAA,cAAA,WAASC,UAAU,WACjBD,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKC,UAAU,+BACLD,EAAAA,cAAA,UAAKF,IAEfE,EAAAA,cAAA,OAAKC,UAAU,+BACZD,EAAAA,cAAA,OAAKE,wBAAyB,CAC7BC,OAAQJ,EAAaK,oBAAoBC,UAIvC,C,+CCKlB,IAhB4BR,IAAA,IAAC,OAACS,GAAQT,EAAA,OAEpCG,EAAAA,cAAA,WAASC,UAAU,WACjBD,EAAAA,cAAA,OAAKC,UAAU,uBACZK,EAAOC,KAAIC,IAAqC,IAApC,gBAACC,EAAe,YAAEC,GAAYF,EACzC,OACER,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAACW,EAAAA,EAAW,CAACC,IAAI,gBAAgBC,MAAOJ,EAAiBK,YAAa,GAAG,IACzEd,EAAAA,cAAA,KAAGC,UAAU,cAAcS,GACvB,KAIJ,C,iECfgB,IAEtBK,EAAa,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAiBhB,OAjBgBC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACjBC,OAAA,WACE,IAIIC,EAJAC,EAAYC,KAAKC,MAAMC,MACvBC,EAAYC,IAAOL,EAAUM,MAAMC,OAAO,gBAC1CC,EAAYH,IAAOL,EAAUM,MAAMC,OAAO,SAQ9C,OAJER,EADEC,EAAUS,QACD,WAEAJ,IAAOL,EAAUU,SAASH,OAAO,SAG5C9B,EAAAA,cAAA,YACG2B,EAAU,SAAOI,EAAU,OAAyBT,EAG3D,EAACP,CAAA,CAjBgB,CAASf,EAAAA,WAoB5B,K,+CC6BA,IAhDkBH,IAAA,IAAC,OAACqC,EAAM,OAAEC,GAAOtC,EAAA,OACjCG,EAAAA,cAAA,OAAKoC,GAAG,aAAanC,UAAU,qBAAqB,YAAU,YAG5DD,EAAAA,cAAA,MAAIC,UAAU,uBACXiC,EAAO3B,KAAI,CAAAC,EAAU6B,KAAY,IAArB,MAACC,GAAM9B,EAClB,IAAI+B,EAAQF,EACRG,EAAiB,IAAVH,EAAe,SAAW,GACrC,OACErC,EAAAA,cAAA,MAAI,cAAY,cAAc,gBAAeuC,EAAOtC,UAAWuC,GAAU,KAM/ExC,EAAAA,cAAA,OAAKC,UAAU,iBAAiBwC,KAAK,WAElCP,EAAO3B,KAAI,CAAAmC,EAAiCL,KAAY,IAA5C,gBAAC5B,EAAe,YAAEC,GAAYgC,EACzC,IAAIF,EAAiB,IAAVH,EAAe,uBAAyB,gBACnD,OACErC,EAAAA,cAAA,OAAKC,UAAWuC,GACdxC,EAAAA,cAAA,OAAKC,UAAU,iCACXD,EAAAA,cAAA,OAAKC,UAAU,uBACXD,EAAAA,cAACW,EAAAA,EAAW,CAACC,IAAI,gBAAgBC,MAAOJ,EAAiBK,YAAa,GAAG,KAE7Ed,EAAAA,cAAA,SAAIU,IAEJ,KAUZV,EAAAA,cAAA,KAAGC,UAAU,wBAAwB0C,KAAK,cAAcF,KAAK,SAAS,aAAW,QAC7EzC,EAAAA,cAAA,QAAMC,UAAU,6BAA6B,cAAY,SACzDD,EAAAA,cAAA,QAAMC,UAAU,WAAU,aAE9BD,EAAAA,cAAA,KAAGC,UAAU,wBAAwB0C,KAAK,cAAcF,KAAK,SAAS,aAAW,QAC7EzC,EAAAA,cAAA,QAAMC,UAAU,6BAA6B,cAAY,SACzDD,EAAAA,cAAA,QAAMC,UAAU,WAAU,SAE1B,C,+ICvCsD,IAExD2C,EAAa,SAAA5B,GAAA,SAAA4B,IAAA,OAAA5B,EAAAC,MAAA,KAAAC,YAAA,KAoIhB,OApIgBC,EAAAA,EAAAA,GAAAyB,EAAA5B,GAAA4B,EAAAxB,UACjBC,OAAA,WAEE,MAAMK,EAAQmB,IAAIrB,KAAKC,MAAO,wBAI9B,IAAIqB,EAaAC,EAQAC,EAeAC,EAYAC,EASAC,EAmBJ,OA/EAC,QAAQC,IAAI3B,GAKVoB,EADqC,MAAnCpB,EAAM4B,0BAENtD,EAAAA,cAACuD,EAAAA,EAAS,CAACrB,OAAQR,EAAM4B,0BAA2BnB,OAAQT,EAAM4B,0BAA0BnB,SAK5FnC,EAAAA,cAACW,EAAAA,EAAW,CAACC,IAAI,gBAAgBC,MAAOa,EAAM8B,cAAc/C,gBAAiBK,YAAa,GAAG,IAM7FY,EAAM+B,gCACRV,EACE/C,EAAAA,cAAC0D,EAAAA,EAAa,CAACpD,OAAQoB,EAAM+B,iCAO/BT,EADEtB,EAAMiC,SAEN3D,EAAAA,cAAA,KAAGC,UAAU,QAAOD,EAAAA,cAAC4D,EAAAA,EAAS,CAAClC,MAAOA,IAAS,MAAIA,EAAMiC,UAKzD3D,EAAAA,cAAA,KAAGC,UAAU,QAAOD,EAAAA,cAAC4D,EAAAA,EAAS,CAAClC,MAAOA,KAQtCA,EAAMmC,2BACRZ,EACEvB,EAAMmC,yBAAyBtD,KAAIV,IAAmE,IAAlE,GAACuC,EAAE,MAAE0B,EAAK,gDAAEC,GAAgDlE,EAC9F,OACIG,EAAAA,cAACgE,EAAAA,EAAY,CAACC,IAAK7B,EAAItC,WAAYgE,EAAO/D,aAAcgE,GAAmD,KAQ9F,MAAnBrC,EAAMwC,cACRhB,EACElD,EAAAA,cAAA,KAAGC,UAAU,eACVyB,EAAMwC,YAAYC,OAMT,MAAZzC,EAAM0C,OACRjB,EACEzB,EAAM0C,KAAK7D,KAAIC,IAAmB,IAAlB,KAAC6D,EAAI,KAAEF,GAAK3D,EAC1B,OACER,EAAAA,cAAA,KAAGC,UAAU,OACVkE,EACC,KAaVnE,EAAAA,cAACsE,EAAAA,EAAM,KACPtE,EAAAA,cAAA,YACEA,EAAAA,cAACuE,EAAAA,EAAM,CAACT,MAAK,GAAKpC,EAAMoC,QACxB9D,EAAAA,cAAA,WAASC,UAAU,QACjBD,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,OAAKC,UAAU,iCAEbD,EAAAA,cAAA,UAAK0B,EAAMoC,OACX9D,EAAAA,cAAA,OAAKC,UAAU,WAAWC,wBAAyB,CAC/CC,OAAQuB,EAAM8C,yBAAyBpE,oBAAoBC,QAE9D2C,EACAE,EAAeC,EAIfL,KAQP9C,EAAAA,cAAA,WAASC,UAAU,QACjBD,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKC,UAAU,+BACbD,EAAAA,cAAA,UAAI,oBAENA,EAAAA,cAAA,OAAKC,UAAU,+BACbD,EAAAA,cAAA,OAAKE,wBAAyB,CAC5BC,OAAQuB,EAAMhB,YAAYN,oBAAoBC,WAQrD4C,EAIAF,GAKP,EAACH,CAAA,CApIgB,CAAS5C,EAAAA,WAuI5B,W","sources":["webpack://panke-gallery-website/./src/components/content-block.js","webpack://panke-gallery-website/./src/components/documentation-images.js","webpack://panke-gallery-website/./src/components/event-date-time.js","webpack://panke-gallery-website/./src/components/slideshow.js","webpack://panke-gallery-website/./src/templates/event.js"],"sourcesContent":["import React from 'react'\n\nconst ContentBlock = ({ blockTitle, blockContent }) => (\n        <section className=\"further\">\n          <div className=\"row\">\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\n                      <h2>{blockTitle}</h2>\n                  </div>\n            <div className=\"col-md-8 col-sm-8 col-xs-12\">\n              {<div dangerouslySetInnerHTML={{\n                __html: blockContent.childMarkdownRemark.html\n              }} />}\n          </div>\n          </div>\n        </section>\n)\n\nexport default ContentBlock\n","import React from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst DocumentationImages = ({images }) => (\n\n  <section className=\"further\">\n    <div className=\"col-md-12 col-xs-12\">\n      {images.map(({gatsbyImageData, description}) => {\n        return (\n          <div className=\"image-wrapper 3col\">\n            <GatsbyImage alt=\"FeaturedImage\" image={gatsbyImageData} aspectratio={16/9}  />\n            <p className=\"meta mt-2 \">{description}</p>\n          </div>\n        )\n      })}\n    </div>\n  </section>\n\n)\nexport default DocumentationImages\n  ","import React from 'react';\nimport Moment from 'moment';\n\nclass EventDateComp extends React.Component {\n  render() {\n    var thisevent = this.props.event;\n    var eventDate = Moment(thisevent.date).format('DD MMMM YYYY');\n    var eventTime = Moment(thisevent.date).format('HH:mm')\n\n    var eventEnd;\n    if (thisevent.openEnd) {\n      eventEnd = 'open end';\n    }else{\n      eventEnd = Moment(thisevent.endTime).format('HH:mm');\n    }\n    return(\n      <span>\n        {eventDate} from {eventTime} &thinsp;&ndash;&thinsp;{eventEnd}\n      </span>\n    );\n  }\n}\n\nexport default EventDateComp;\n\n","import React from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n//import Carousel from 'react-responsive-carousel'\n\nconst Slideshow = ({slides, length}) => (\n  <div id=\"myCarousel\" className=\"row carousel slide\" data-ride=\"carousel\">\n\n    {/* Indicators */}\n    <ol className=\"carousel-indicators\">\n      {slides.map(({sizes}, index ) => {\n        var sldto = index;\n        var cls = (index === 0) ? 'active' : '';\n        return (\n          <li data-target=\"#myCarousel\" data-slide-to={sldto} className={cls}></li>\n        )\n      })}\n    </ol>\n\n    {/* Wrapper for slides */}\n    <div className=\"carousel-inner\" role=\"listbox\">\n\n      {slides.map(({gatsbyImageData, description}, index ) => {\n        var cls = (index === 0) ? 'carousel-item active' : 'carousel-item';\n        return (\n          <div className={cls}>\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"image-wrapper 3-col\">\n                    <GatsbyImage alt=\"FeaturedImage\" image={gatsbyImageData} aspectratio={16/9} />\n                </div>\n                <p>{description}</p>\n            </div>\n          </div>\n        )\n      })}\n\n\n\n    </div>\n\n    {/* Left and right controls */}\n\n    <a className=\"carousel-control-prev\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Previous</span>\n    </a>\n    <a className=\"carousel-control-next\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Next</span>\n    </a>\n  </div>\n\n)\nexport default Slideshow\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport ContentBlock from '../components/content-block'\nimport EventDate from '../components/event-date-time'\nimport Slideshow from '../components/slideshow'\nimport Documentation from '../components/documentation-images'\n\nclass EventTemplate extends React.Component {\n  render() {\n\n    const event = get(this.props, 'data.contentfulEvent')\n    console.log(event);\n    // ––– Slideshow or featured images –––\n\n    var ImageOrSlides;\n    if (event.eventImpressionsSlideshow != null){\n      ImageOrSlides =(\n        <Slideshow slides={event.eventImpressionsSlideshow} length={event.eventImpressionsSlideshow.length} />\n      );\n    }\n    else{\n      ImageOrSlides =(\n        <GatsbyImage alt=\"FeaturedImage\" image={event.featuredImage.gatsbyImageData} aspectratio={16/9}  />\n      );\n    }\n\n    // ––– Documentation –––\n    var DocumentationImages;\n    if (event.eventDocumentationImagesBelow){\n      DocumentationImages =(\n        <Documentation images={event.eventDocumentationImagesBelow} />\n      );\n    }\n\n    // ––– Event date and fee –––\n    var EventDateAndEntryFee;\n    if (event.entryfee){\n      EventDateAndEntryFee =(\n        <p className=\"meta\"><EventDate event={event} /> | {event.entryfee}</p>\n      );\n    }\n    else{\n      EventDateAndEntryFee =(\n        <p className=\"meta\"><EventDate event={event} /></p>\n      );\n    }\n\n\n    // ––– Further Content Blocks –––\n\n    var FurtherContentBlocks;\n    if (event.furtherInformationBlocks){\n      FurtherContentBlocks =(\n        event.furtherInformationBlocks.map(({id, title, childContentfulContentBlockBlockContentTextNode}) => {\n          return (\n              <ContentBlock key={id} blockTitle={title} blockContent={childContentfulContentBlockBlockContentTextNode} />\n          )\n        })\n      );\n    }\n\n    // ––– Event series and tags –––\n    var eventCategory;\n    if (event.eventSeries!=null){\n      eventCategory =(\n        <p className=\"eventSeries\">\n          {event.eventSeries.name}\n        </p>\n      );\n    }\n\n    var eventTags;\n    if (event.tags!=null){\n      eventTags =(\n        event.tags.map(({slug, name}) => {\n          return (\n            <p className=\"tag\">\n              {name}\n            </p>\n          )\n        })\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n    return (\n      <Layout>\n      <main>\n        <Helmet title={`${event.title}`} />\n        <section className=\"head\">\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n\n              <h1>{event.title}</h1>\n              <div className=\"subtitle\" dangerouslySetInnerHTML={{\n                  __html: event.subtitleShortDescription.childMarkdownRemark.html\n                }} />\n              {EventDateAndEntryFee}\n              {eventCategory}{eventTags}\n\n              {/*  ---- FEATURED IMAGE ---- */}\n\n              {ImageOrSlides}\n\n            </div>\n          </div>\n        </section>\n\n        {/*  ---- ABOUT ---- */}\n\n        <section className=\"info\">\n          <div className=\"row\">\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\n              <h2>About the event</h2>\n            </div>\n            <div className=\"col-md-8 col-sm-8 col-xs-12\">\n              <div dangerouslySetInnerHTML={{\n                __html: event.description.childMarkdownRemark.html\n              }} />\n            </div>\n          </div>\n        </section>\n\n        {/*  ---- ADDITIONAL BLOCKS (each a section) ---- */}\n\n        {FurtherContentBlocks}\n\n        {/*  ---- DOCUMENTATION IMAGES ---- */}\n\n        {DocumentationImages}\n\n      </main>\n      </Layout>\n    )\n  }\n}\n\nexport default EventTemplate;\n\n\n\n//==========================================================================\n\n//                                QUERY\n\n//==========================================================================\n\n\nexport const pageQuery = graphql`\n  query EventBySlug($slug: String!) {\n    contentfulEvent(slug: { eq: $slug }) {\n      title\n      date\n      endTime\n      openEnd\n      entryfee\n      eventSeries {\n        slug\n        name\n      }\n      tags {\n        slug\n        name\n      }\n      subtitleShortDescription {\n        childMarkdownRemark {\n          html\n        }\n      }\n      description {\n        childMarkdownRemark {\n          html\n        }\n      }\n      furtherInformationBlocks {\n        id\n        title\n        childContentfulContentBlockBlockContentTextNode {\n          id\n          childMarkdownRemark {\n            html\n          }\n        }\n      }\n      featuredImage{\n        gatsbyImageData(\n          layout: CONSTRAINED,\n          width: 1050,\n          placeholder: BLURRED,\n          quality: 100\n        )\n      }\n      eventImpressionsSlideshow{\n        gatsbyImageData(\n          layout: CONSTRAINED,\n          width: 1050,\n          placeholder: BLURRED,\n          quality: 100\n        )\n        description\n      }\n      eventDocumentationImagesBelow{\n        gatsbyImageData(\n          layout: CONSTRAINED,\n          width: 1050,\n          placeholder: BLURRED,\n          quality: 100\n        )\n        description\n      }\n    }\n  }\n`\n"],"names":["_ref","blockTitle","blockContent","React","className","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","images","map","_ref2","gatsbyImageData","description","GatsbyImage","alt","image","aspectratio","EventDateComp","_React$Component","apply","arguments","_inheritsLoose","prototype","render","eventEnd","thisevent","this","props","event","eventDate","Moment","date","format","eventTime","openEnd","endTime","slides","length","id","index","sizes","sldto","cls","role","_ref3","href","EventTemplate","get","ImageOrSlides","DocumentationImages","EventDateAndEntryFee","FurtherContentBlocks","eventCategory","eventTags","console","log","eventImpressionsSlideshow","Slideshow","featuredImage","eventDocumentationImagesBelow","Documentation","entryfee","EventDate","furtherInformationBlocks","title","childContentfulContentBlockBlockContentTextNode","ContentBlock","key","eventSeries","name","tags","slug","Layout","Helmet","subtitleShortDescription"],"sourceRoot":""}