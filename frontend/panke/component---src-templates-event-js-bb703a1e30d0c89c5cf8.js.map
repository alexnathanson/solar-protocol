{"version":3,"sources":["webpack:///./src/components/content-block.js","webpack:///./src/components/documentation-images.js","webpack:///./src/components/slideshow.js","webpack:///./src/components/event-date-time.js","webpack:///./src/templates/event.js"],"names":["blockTitle","blockContent","className","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","images","map","fluid","description","alt","aspectRatio","slides","length","id","data-ride","index","sizes","sldto","cls","data-target","data-slide-to","role","href","data-slide","aria-hidden","EventDateComp","render","eventEnd","thisevent","this","props","event","eventDate","Moment","date","format","eventTime","openEnd","endTime","React","Component","EventTemplate","ImageOrSlides","DocumentationImages","EventDateAndEntryFee","FurtherContentBlocks","eventCategory","eventTags","get","console","log","eventImpressionsSlideshow","featuredImage","eventDocumentationImagesBelow","entryfee","furtherInformationBlocks","title","childContentfulContentBlockBlockContentTextNode","key","eventSeries","name","tags","slug","subtitleShortDescription"],"mappings":"8FAAA,yBAEe,oBAAGA,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAf,OACP,6BAASC,UAAU,WACjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BACL,4BAAKF,IAEf,yBAAKE,UAAU,+BACZ,yBAAKC,wBAAyB,CAC7BC,OAAQH,EAAaI,oBAAoBC,a,oCCVzD,8CAGe,oBAAEC,EAAF,EAAEA,OAAF,OAEb,6BAASL,UAAU,WACjB,yBAAKA,UAAU,uBAEZK,EAAOC,KAAI,YAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACnB,OACE,yBAAKR,UAAU,sBACb,kBAAC,IAAD,CAAKS,IAAI,kCAAkCF,MAAK,iBAAMA,EAAN,CAAaG,YAAa,GAAG,MAC7E,2BAAIF,W,oCCZhB,8CAIe,oBAAEG,EAAF,EAAEA,OAAF,EAAUC,OAAV,OACb,yBAAKC,GAAG,aAAab,UAAU,qBAAqBc,YAAU,YAG5D,wBAAId,UAAU,uBACXW,EAAOL,KAAI,WAAUS,GAAW,EAAnBC,MAAoB,IAC5BC,EAAQF,EACRG,EAAiB,IAAVH,EAAe,SAAW,GACrC,OACE,wBAAII,cAAY,cAAcC,gBAAeH,EAAOjB,UAAWkB,QAMrE,yBAAKlB,UAAU,iBAAiBqB,KAAK,WAElCV,EAAOL,KAAI,WAAuBS,GAAY,IAAjCR,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YACfU,EAAiB,IAAVH,EAAe,uBAAyB,gBACnD,OACE,yBAAKf,UAAWkB,GACd,yBAAKlB,UAAU,iCACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAKS,IAAI,gBAAgBF,MAAK,iBAAMA,EAAN,CAAcG,YAAa,GAAG,OAEhE,2BAAIF,SAYhB,uBAAGR,UAAU,wBAAwBsB,KAAK,cAAcD,KAAK,SAASE,aAAW,QAC7E,0BAAMvB,UAAU,6BAA6BwB,cAAY,SACzD,0BAAMxB,UAAU,WAAhB,aAEJ,uBAAGA,UAAU,wBAAwBsB,KAAK,cAAcD,KAAK,SAASE,aAAW,QAC7E,0BAAMvB,UAAU,6BAA6BwB,cAAY,SACzD,0BAAMxB,UAAU,WAAhB,Y,4FC5CFyB,E,kGACJC,OAAA,WACE,IAIIC,EAJAC,EAAYC,KAAKC,MAAMC,MACvBC,EAAYC,IAAOL,EAAUM,MAAMC,OAAO,gBAC1CC,EAAYH,IAAOL,EAAUM,MAAMC,OAAO,SAQ9C,OAJER,EADEC,EAAUS,QACD,WAEAJ,IAAOL,EAAUU,SAASH,OAAO,SAG5C,8BACGH,EADH,SACoBI,EADpB,OACuDT,I,GAdjCY,IAAMC,WAoBnBf,O,yMCVTgB,E,kGACJf,OAAA,WAEE,IAIIgB,EAaAC,EAQAC,EAeAC,EAYAC,EASAC,EA7DEhB,EAAQiB,IAAInB,KAAKC,MAAO,wBAgF9B,OA/EAmB,QAAQC,IAAInB,GAKVW,EADqC,MAAnCX,EAAMoB,0BAEN,kBAAC,IAAD,CAAWxC,OAAQoB,EAAMoB,0BAA2BvC,OAAQmB,EAAMoB,0BAA0BvC,SAK5F,kBAAC,IAAD,CAAKH,IAAI,gBAAgBF,MAAK,iBAAMwB,EAAMqB,cAAc7C,MAA1B,CAAkCG,YAAa,GAAG,MAMhFqB,EAAMsB,gCACRV,EACE,kBAAC,IAAD,CAAetC,OAAQ0B,EAAMsB,iCAO/BT,EADEb,EAAMuB,SAEN,uBAAGtD,UAAU,QAAO,kBAAC,IAAD,CAAW+B,MAAOA,IAAtC,MAAmDA,EAAMuB,UAKzD,uBAAGtD,UAAU,QAAO,kBAAC,IAAD,CAAW+B,MAAOA,KAQtCA,EAAMwB,2BACRV,EACEd,EAAMwB,yBAAyBjD,KAAI,YAAmE,IAAjEO,EAAgE,EAAhEA,GAAI2C,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,gDAC9C,OACI,kBAAC,IAAD,CAAcC,IAAK7C,EAAIf,WAAY0D,EAAOzD,aAAc0D,QAQ3C,MAAnB1B,EAAM4B,cACRb,EACE,uBAAG9C,UAAU,eACV+B,EAAM4B,YAAYC,OAMT,MAAZ7B,EAAM8B,OACRd,EACEhB,EAAM8B,KAAKvD,KAAI,YAAkB,EAAhBwD,KAAiB,IAAXF,EAAU,EAAVA,KACrB,OACE,uBAAG5D,UAAU,OACV4D,OAcT,kBAAC,IAAD,KACA,8BACE,kBAAC,IAAD,CAAQJ,MAAK,GAAKzB,EAAMyB,QACxB,6BAASxD,UAAU,QACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCAEb,4BAAK+B,EAAMyB,OACX,yBAAKxD,UAAU,WAAWC,wBAAyB,CAC/CC,OAAQ6B,EAAMgC,yBAAyB5D,oBAAoBC,QAE9DwC,EACAE,EAAeC,EAIfL,KAQP,6BAAS1C,UAAU,QACjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BACb,gDAEF,yBAAKA,UAAU,+BACb,yBAAKC,wBAAyB,CAC5BC,OAAQ6B,EAAMvB,YAAYL,oBAAoBC,WAQrDyC,EAIAF,K,GA/HmBJ,IAAMC,WAuInBC","file":"component---src-templates-event-js-bb703a1e30d0c89c5cf8.js","sourcesContent":["import React from 'react'\n\nexport default ({ blockTitle, blockContent }) => (\n        <section className=\"further\">\n          <div className=\"row\">\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\n                      <h2>{blockTitle}</h2>\n                  </div>\n            <div className=\"col-md-8 col-sm-8 col-xs-12\">\n              {<div dangerouslySetInnerHTML={{\n                __html: blockContent.childMarkdownRemark.html\n              }} />}\n          </div>\n          </div>\n        </section>\n)\n","import React from 'react'\nimport Img from 'gatsby-image'\n\nexport default ({images }) => (\n\n  <section className=\"further\">\n    <div className=\"col-md-12 col-xs-12\">\n\n      {images.map(({fluid, description}) => {\n        return (\n          <div className=\"image-wrapper 3col\">\n            <Img alt=\"Documentation of the exhibition\" fluid={{...fluid, aspectRatio: 16/9}} />\n            <p>{description}</p>\n          </div>\n        )\n      })}\n    </div>\n  </section>\n\n)\n","import React from 'react'\nimport Img from 'gatsby-image'\n//import Carousel from 'react-responsive-carousel'\n\nexport default ({slides, length}) => (\n  <div id=\"myCarousel\" className=\"row carousel slide\" data-ride=\"carousel\">\n\n    {/* Indicators */}\n    <ol className=\"carousel-indicators\">\n      {slides.map(({sizes}, index ) => {\n        var sldto = index;\n        var cls = (index === 0) ? 'active' : '';\n        return (\n          <li data-target=\"#myCarousel\" data-slide-to={sldto} className={cls}></li>\n        )\n      })}\n    </ol>\n\n    {/* Wrapper for slides */}\n    <div className=\"carousel-inner\" role=\"listbox\">\n\n      {slides.map(({fluid, description}, index ) => {\n        var cls = (index === 0) ? 'carousel-item active' : 'carousel-item';\n        return (\n          <div className={cls}>\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"image-wrapper 3-col\">\n                    <Img alt=\"FeaturedImage\" fluid={{...fluid , aspectRatio: 16/9}} />\n                </div>\n                <p>{description}</p>\n            </div>\n          </div>\n        )\n      })}\n\n\n\n    </div>\n\n    {/* Left and right controls */}\n\n    <a className=\"carousel-control-prev\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Previous</span>\n    </a>\n    <a className=\"carousel-control-next\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Next</span>\n    </a>\n  </div>\n\n)\n","import React from 'react';\nimport Moment from 'moment';\n\nclass EventDateComp extends React.Component {\n  render() {\n    var thisevent = this.props.event;\n    var eventDate = Moment(thisevent.date).format('DD MMMM YYYY');\n    var eventTime = Moment(thisevent.date).format('HH:mm')\n\n    var eventEnd;\n    if (thisevent.openEnd) {\n      eventEnd = 'open end';\n    }else{\n      eventEnd = Moment(thisevent.endTime).format('HH:mm');\n    }\n    return(\n      <span>\n        {eventDate} from {eventTime} &thinsp;&ndash;&thinsp;{eventEnd}\n      </span>\n    );\n  }\n}\n\nexport default EventDateComp;\n\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Img from 'gatsby-image'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport ContentBlock from '../components/content-block'\nimport EventDate from '../components/event-date-time'\nimport Slideshow from '../components/slideshow'\nimport Documentation from '../components/documentation-images'\n\n\nclass EventTemplate extends React.Component {\n  render() {\n\n    const event = get(this.props, 'data.contentfulEvent')\n    console.log(event);\n    // ––– Slideshow or featured images –––\n\n    var ImageOrSlides;\n    if (event.eventImpressionsSlideshow != null){\n      ImageOrSlides =(\n        <Slideshow slides={event.eventImpressionsSlideshow} length={event.eventImpressionsSlideshow.length} />\n      );\n    }\n    else{\n      ImageOrSlides =(\n        <Img alt=\"FeaturedImage\" fluid={{...event.featuredImage.fluid , aspectRatio: 16/9}} />\n      );\n    }\n\n    // ––– Documentation –––\n    var DocumentationImages;\n    if (event.eventDocumentationImagesBelow){\n      DocumentationImages =(\n        <Documentation images={event.eventDocumentationImagesBelow} />\n      );\n    }\n\n    // ––– Event date and fee –––\n    var EventDateAndEntryFee;\n    if (event.entryfee){\n      EventDateAndEntryFee =(\n        <p className=\"meta\"><EventDate event={event} /> | {event.entryfee}</p>\n      );\n    }\n    else{\n      EventDateAndEntryFee =(\n        <p className=\"meta\"><EventDate event={event} /></p>\n      );\n    }\n\n\n    // ––– Further Content Blocks –––\n\n    var FurtherContentBlocks;\n    if (event.furtherInformationBlocks){\n      FurtherContentBlocks =(\n        event.furtherInformationBlocks.map(({id, title, childContentfulContentBlockBlockContentTextNode}) => {\n          return (\n              <ContentBlock key={id} blockTitle={title} blockContent={childContentfulContentBlockBlockContentTextNode} />\n          )\n        })\n      );\n    }\n\n    // ––– Event series and tags –––\n    var eventCategory;\n    if (event.eventSeries!=null){\n      eventCategory =(\n        <p className=\"eventSeries\">\n          {event.eventSeries.name}\n        </p>\n      );\n    }\n\n    var eventTags;\n    if (event.tags!=null){\n      eventTags =(\n        event.tags.map(({slug, name}) => {\n          return (\n            <p className=\"tag\">\n              {name}\n            </p>\n          )\n        })\n      );\n    }\n\n    //==========================================================================\n\n    //                                OUTPUT\n\n    //==========================================================================\n\n    return (\n      <Layout>\n      <main>\n        <Helmet title={`${event.title}`} />\n        <section className=\"head\">\n          <div className=\"row headline\">\n            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n\n              <h1>{event.title}</h1>\n              <div className=\"subtitle\" dangerouslySetInnerHTML={{\n                  __html: event.subtitleShortDescription.childMarkdownRemark.html\n                }} />\n              {EventDateAndEntryFee}\n              {eventCategory}{eventTags}\n\n              {/*  ---- FEATURED IMAGE ---- */}\n\n              {ImageOrSlides}\n\n            </div>\n          </div>\n        </section>\n\n        {/*  ---- ABOUT ---- */}\n\n        <section className=\"info\">\n          <div className=\"row\">\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\n              <h2>About the event</h2>\n            </div>\n            <div className=\"col-md-8 col-sm-8 col-xs-12\">\n              <div dangerouslySetInnerHTML={{\n                __html: event.description.childMarkdownRemark.html\n              }} />\n            </div>\n          </div>\n        </section>\n\n        {/*  ---- ADDITIONAL BLOCKS (each a section) ---- */}\n\n        {FurtherContentBlocks}\n\n        {/*  ---- DOCUMENTATION IMAGES ---- */}\n\n        {DocumentationImages}\n\n      </main>\n      </Layout>\n    )\n  }\n}\n\nexport default EventTemplate;\n\n\n\n//==========================================================================\n\n//                                QUERY\n\n//==========================================================================\n\n\nexport const pageQuery = graphql`\n  query EventBySlug($slug: String!) {\n    contentfulEvent(slug: { eq: $slug }) {\n      title\n      date\n      endTime\n      openEnd\n      entryfee\n      eventSeries {\n        slug\n        name\n      }\n      tags {\n        slug\n        name\n      }\n      subtitleShortDescription {\n        childMarkdownRemark {\n          html\n        }\n      }\n      description {\n        childMarkdownRemark {\n          html\n        }\n      }\n      furtherInformationBlocks {\n        id\n        title\n        childContentfulContentBlockBlockContentTextNode {\n          id\n          childMarkdownRemark {\n            html\n          }\n        }\n      }\n      featuredImage{\n        fluid(maxWidth: 1000) {\n          sizes\n          src\n        }\n      }\n      eventImpressionsSlideshow{\n        fluid(maxWidth: 1000) {\n          sizes\n          src\n        }\n        description\n      }\n      eventDocumentationImagesBelow{\n        fluid(maxWidth: 1000) {\n          sizes\n          src\n        }\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}